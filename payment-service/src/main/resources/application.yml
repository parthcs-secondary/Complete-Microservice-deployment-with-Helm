com:
  bus:
    reservation:
      mq:
        payment:
          topic-name: payment-processed
        topic-name: book-seat
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
server:
  port: 8084
spring:
  profiles:
    active: prod
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:9000
  application:
    name: payment-service
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    password: pass@123
    url: jdbc:mysql://localhost:3306/payment-ms
    username: root
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    generate-ddl: true
    hibernate:
      ddl-auto: update
  kafka:
    consumer:
      auto-offset-reset: earliest
      bootstrap-servers: localhost:9092
      group-id: process-payment
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
            type:
              mapping: dto:com.busreservation.paymentservice.valueobjects.BookingMessageVO
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      auto-offset-reset: earliest
      bootstrap-servers: localhost:9092
      group-id: process-payment
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'
            type:
              mapping: paymentDto:com.busreservation.paymentservice.valueobjects.PaymentMessageVO
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

      
# Actuator Prometheus Endpoint
management:
  endpoints:
    web:
      exposure:
        include: prometheus
